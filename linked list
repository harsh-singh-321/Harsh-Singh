#include<stdio.h>
#include<stdlib.h>
typedef struct nodetype{
	int info;
	struct nodetype *next;
}node;

void insert_at_beg(node **start,int item){
	node *ptr;
	ptr=(node*)malloc(sizeof(node));
	ptr->info=item;
	ptr->next=*start;
	*start=ptr;
}

void insert_at_end(node **start,int item){
	node *ptr,*last;
	ptr=(node*)malloc(sizeof(node));
	ptr->info=item;
	ptr->next=NULL;
	if(*start==NULL){
		*start=ptr;
		printf("Linked List is Empty");
	}
	else{
		last=*start;
		while(last->next!=NULL){
			last=last->next;
		}
	}
	last->next=ptr;
}

void display(node *start){
	if(start==NULL){
		printf("\n Linked list empty");
		return ;
	}
	while(start!=NULL){
		printf("%d  ",start->info);
		start=start->next;
	}
}

void delete_at_beg(node** start){
    node *ptr;
	if(*start==NULL){
		printf("Linked list is empty");
		return ;
	}	
	ptr=*start;
	*start=ptr->next;
	printf("\n Delete Value is:%d",ptr->info);
	free(ptr);
}

void delete_at_end(node **start){
	node *ptr,*last;
	if(*start==NULL){
		printf("Empty Linked list");
		return ;
	}
	if((*start)->next==NULL){
		ptr=*start;
		*start=NULL;
	}
	else{
		last=*start;
		while(last->next->next!=NULL){
			last=last->next;
		}
		ptr=last->next;
		last->next=NULL;
	}
	printf("\n Delete Value is:%d",ptr->info);
	free(ptr);
}

int main(){
	int item,ch;
	node *head;
	head = NULL;
		printf(" Menu is\n1.Insert element at beg ");
		printf("\n2.Insert element at end ");
		printf("\n3.Display element ");
		printf("\n4.Delete element at beg ");
		printf("\n5.Delete element at end ");
		printf("\n6.Delete element at pos ");
	while(1){
	    printf("\nSelect case:");
		scanf("%d",&ch);
		switch(ch){
			case 1:
				printf("\n.Enter element:");
				scanf("%d",&item);
				insert_at_beg(&head,item);
			break;
			case 2:
				printf("\n.Enter element at end:");
				scanf("%d",&item);
				insert_at_end(&head,item);
			case 3:
			    printf("\n.Display element:");
				display(head);
			break;
			case 4:
			    delete_at_beg(&head);
			break;
			case 5:
				delete_at_end(&head);
			break;
		default:exit(1);
		}
	}
	return 0;
}
